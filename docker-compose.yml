version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:80"
      - "7281:443"
    volumes:
      - ./aspnetapp.pfx:/https/aspnetapp.pfx:ro  # lecture seule pour plus de s√©curit√©
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=12345678
      - ConnectionStrings__DefaultConnection=Server=empreinte-db;Database=AuthSystemDB;User=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=true;
    depends_on:
      - db
    container_name: empreinte-backend

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend  # üîÅ Corrig√© si Dockerfile.frontend est √† la racine
    ports:
      - "3000:80"
    container_name: empreinte-frontend

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: empreinte-db
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong!Passw0rd  # üîÅ Correction de la variable d'environnement
    volumes:
      - sqlserverdata:/var/opt/mssql
    healthcheck:  # ‚úÖ Ajout pour s'assurer que SQL Server est pr√™t
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong!Passw0rd", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


volumes:
  sqlserverdata:
